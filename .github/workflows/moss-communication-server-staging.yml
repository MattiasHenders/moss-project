name: Deploy moss-communication-server to staging

on:
  push:
    branches:
      - main

    paths:
      - internal/moss-communication-server/**
      - internal/services/auth/**
      - internal/services/user/**
      - internal/services/runpods/**
      - internal/services/stableDiffusion/**
      - internal/utils/**
      - pkg/**
      - configs/moss-communication-server.staging.yml
      - cmd/moss-communication-server/**
      - deploy/moss-communication-server/**
      - .github/workflows/moss-communication-server-staging.yml

jobs:
  deploy:
    env:
      service: moss-communication-server
      environment: staging
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create GitHub deployment
        uses: chrnorm/deployment-action@v2
        id: deployment
        with:
          token: "${{ github.token }}"
          environment: staging

      - name: Get shortened SHA
        uses: benjlevesque/short-sha@v1.2
        id: short-sha
        with:
          length: 7

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./cmd/${{ env.service }}/Dockerfile.${{ env.environment }}
          push: true
          platforms: linux/amd64
          tags: makeship/${{ env.service }}:${{ env.SHA }}

      - name: Replace deployment variables
        uses: falnyr/replace-env-vars-action@master
        env:
          DOCKER_IMAGE_TAG: ${{ env.SHA }}
          ENVIRONMENT: ${{ env.environment }}
        with:
          filename: deploy/${{ env.service }}/Dockerrun.aws.json

      - name: Generate deployment package
        run: zip -r ../../${{ env.service }}.zip .
        working-directory: ./deploy/${{ env.service }}

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v14
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ env.service }}-${{ env.environment }}
          environment_name: ${{ env.service }}-${{ env.environment }}
          version_label: ${{ env.service }}-${{ github.run_number }}
          region: us-east-2
          deployment_package: ${{ env.service }}.zip
          wait_for_environment_recovery: 60
          use_existing_version_if_available: true

      - name: Update deployment status (success)
        uses: chrnorm/deployment-status@v2
        if: success()
        with:
          token: "${{ github.token }}"
          state: "success"
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
      - name: Update deployment status (failure)
        uses: chrnorm/deployment-status@v2
        if: failure()
        with:
          token: "${{ github.token }}"
          state: "failure"
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
